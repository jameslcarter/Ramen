name: CI
on:
  push:
    branches:
      - main
  pull_request:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true

jobs:
  main:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        name: Checkout [main]
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm nx-cloud start-ci-run
      - run: pnpm nx affected --target=build --parallel --max-parallel=3
      - run: pnpm nx affected --target=test --parallel --max-parallel=2
      - run: pnpm nx-cloud stop-all-agents
  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm nx-cloud start-ci-run
      - run: pnpm nx affected --target=build --parallel --max-parallel=3
      - run: pnpm nx affected --target=test --parallel --max-parallel=2
      - run: pnpm nx-cloud stop-all-agents
  agents:
    runs-on: ubuntu-latest
    name: Agent 1
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [1, 2, 3]
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
          cache: 'pnpm'
      - run: pnpm install
      - name: Start Nx Agent ${{ matrix.agent }}
        run: pnpm nx-cloud start-agent
  chromatic:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2.2.2
          with:
            version: 7
      - uses: actions/setup-node@v1
        with:
          node-version: '16'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Publish to Chromatic
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitZeroOnChanges: true
