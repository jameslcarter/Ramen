name: CI
on:
  push:
    branches:
      - main
  pull_request:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT: 3
  NX_BRANCH: ${{ github.event.number || github.ref_name }}
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}

jobs:
  main:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout [Pull Request]
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - uses: actions/checkout@v3
        name: Checkout [Default Branch]
        if: ${{ github.event_name != 'pull_request' }}
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
        with:
          main-branch-name: 'main'

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.6.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Initialize the Nx Cloud distributed CI run
        run: pnpm nx-cloud start-ci-run

      - name: Format check
        run: NX_CLOUD_DISTRIBUTED_EXECUTION=false pnpm nx-cloud record -- pnpm nx format:check

      - name: Build packages only
        run: pnpm nx run-many -t build --exclude web --parallel=3

      - name: Lint and typecheck
        run: pnpm nx affected -t lint typecheck --parallel=3

      - name: Test
        run: pnpm nx run-many -t test:coverage --parallel=3

      - name: Build storybook
        run: pnpm nx run-many -t build-storybook --parallel=3

      - name: Build apps
        run: pnpm nx affected -t build --parallel=3

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Stop all running agents for this CI run
        if: ${{ always() }}
        run: pnpm nx-cloud stop-all-agents

  agents:
    name: Agent ${{ matrix.agent }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        agent: [1, 2, 3]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.4
        with:
          version: 8.6.1

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Start Nx Agent ${{ matrix.agent }}
        run: pnpm nx-cloud start-agent
        env:
          NX_AGENT_NAME: ${{matrix.agent}}
